{"map":"{\"version\":3,\"sources\":[\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\Movie.js\",\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\App.js\",\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\serviceWorker.js\",\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\index.js\"],\"names\":[\"Movie\",\"react_default\",\"a\",\"createElement\",\"className\",\"Movie_MoviePoster\",\"poster\",\"this\",\"props\",\"alt\",\"title\",\"genres\",\"map\",\"genre\",\"index\",\"Movie_MovieGenres\",\"key\",\"lib_default\",\"text\",\"synopsis\",\"maxLine\",\"ellipsis\",\"trainRight\",\"baseOn\",\"Component\",\"MoviePoster\",\"src\",\"MovieGenres\",\"App\",\"state\",\"_renderMovies\",\"_this\",\"movies\",\"movie\",\"src_Movie_0\",\"title_english\",\"medium_cover_image\",\"id\",\"_getMovies\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"_callApi\",\"sent\",\"setState\",\"stop\",\"fetch\",\"then\",\"data\",\"json\",\"catch\",\"e\",\"console\",\"log\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"kUAKMA,mLAQE,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACE,EAAD,CAAaC,OAAQC,KAAKC,MAAMF,OAAQG,IAAKF,KAAKC,MAAME,SAE5DT,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAA,KAAKI,KAAKC,MAAME,OAChBT,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACVG,KAAKC,MAAMG,OAAOC,IAAI,SAACC,EAAOC,GAC3B,OAAOb,EAAAC,EAAAC,cAACY,EAAD,CAAaJ,OAAQE,EAAOG,IAAKF,OAGhDb,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIgB,KAAMX,KAAKC,MAAMW,SACjBC,QAAQ,IACRC,SAAS,MACTC,YAAU,EACVC,OAAO,YAENhB,KAAKC,MAAMW,mBA5BhBK,EAAAA,WAoCdC,mLAME,OACIxB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBAAgBsB,IAAKnB,KAAKC,MAAMF,OAAQG,IAAKF,KAAKC,MAAMC,IAAKC,MAAOH,KAAKC,MAAMC,aAPhFe,EAAAA,WAYpBG,mLAKE,OAAO1B,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,gBAAgBG,KAAKC,MAAMG,eALhCa,EAAAA,WASXxB,EAAAA,ECZA4B,oNA7CbC,MAAQ,KAMRC,cAAgB,WAUd,OATeC,EAAKF,MAAMG,OAAOpB,IAAI,SAACqB,GACpC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,CACLxB,MAAOuB,EAAME,cACb7B,OAAQ2B,EAAMG,mBACdpB,IAAKiB,EAAMI,GACX1B,OAAQsB,EAAMtB,OACdQ,SAAUc,EAAMd,gBAMtBmB,gCAAa,SAAAC,IAAA,IAAAP,EAAA,OAAAQ,EAAAtC,EAAAuC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACUb,EAAKc,WADf,KAAA,EACLb,EADKU,EAAAI,KAEXf,EAAKgB,SAAS,CACZf,OAAAA,IAHS,KAAA,EAAA,IAAA,MAAA,OAAAU,EAAAM,SAAAT,EAAAhC,WAObsC,SAAW,WACT,OAAOI,MAAM,yDACZC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAE,GAAI,OAAIA,EAAKD,KAAKnB,SACvBqB,MACC,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,yFA5BnB/C,KAAK+B,8CAkCL,OACErC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAWG,KAAKsB,MAAMG,OAAS,MAAQ,gBACzCzB,KAAKsB,MAAMG,OAASzB,KAAKuB,gBAAkB,qBAxClCN,EAAAA,YCMEiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,EAAAA,EAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,KAAK,SAAAoB,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\r\\nimport './Movie.css';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport LE from'react-lines-ellipsis';\\r\\n\\r\\nclass Movie extends Component {\\r\\n    static propTypes = {\\r\\n        title: PropTypes.string.isRequired,\\r\\n        poster: PropTypes.string.isRequired,\\r\\n        genres: PropTypes.array.isRequired,\\r\\n        synopsis: PropTypes.string.isRequired\\r\\n    }\\r\\n    render(){\\r\\n        return (\\r\\n            <div className=\\\"Movie\\\">\\r\\n                <div className=\\\"Movie__Column\\\">\\r\\n                    <MoviePoster poster={this.props.poster} alt={this.props.title}/>\\r\\n                </div>\\r\\n                <div className=\\\"Movie__Column\\\">\\r\\n                    <h1>{this.props.title}</h1>\\r\\n                    <div className=\\\"Movie__Genres\\\">\\r\\n                        {this.props.genres.map((genre, index) => {\\r\\n                            return <MovieGenres genres={genre} key={index}/>\\r\\n                        })}\\r\\n                    </div>\\r\\n                    <div className=\\\"Movie__Synopsis\\\">\\r\\n                    <LE \\r\\n                        text={this.props.synopsis}\\r\\n                        maxLine='3'\\r\\n                        ellipsis='...'\\r\\n                        trainRight\\r\\n                        baseOn='letters'\\r\\n                    />\\r\\n                        {this.props.synopsis}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nclass MoviePoster extends Component {\\r\\n    static propTypes = {\\r\\n        poster: PropTypes.string.isRequired,\\r\\n        alt: PropTypes.string.isRequired\\r\\n    }\\r\\n    render(){\\r\\n        return (\\r\\n            <img className=\\\"Movie__Poster\\\" src={this.props.poster} alt={this.props.alt} title={this.props.alt} />\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nclass MovieGenres extends Component {\\r\\n    static propTypes = {\\r\\n        genres: PropTypes.string.isRequired\\r\\n    }\\r\\n    render(){\\r\\n        return <span className=\\\"Movie__Genre\\\">{this.props.genres}</span>\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Movie;\",\"import React, { Component } from 'react';\\nimport Movie from './Movie';\\nimport './App.css';\\n\\nclass App extends Component {\\n  state = {}\\n\\n  componentDidMount(){\\n    this._getMovies();\\n  }\\n\\n  _renderMovies = () => {\\n    const movies = this.state.movies.map((movie) => {\\n      return <Movie \\n        title={movie.title_english}\\n        poster={movie.medium_cover_image}\\n        key={movie.id}\\n        genres={movie.genres}\\n        synopsis={movie.synopsis}\\n      />\\n    })\\n    return movies\\n  }\\n\\n  _getMovies = async () => {\\n    const movies = await this._callApi();\\n    this.setState({\\n      movies\\n    });\\n  }\\n\\n  _callApi = () => {\\n    return fetch('https://yts.ag/api/v2/list_movies.json?sort_by=rating')\\n    .then(data => data.json())\\n    .then(json => json.data.movies)\\n    .catch(\\n      e => console.log(e)\\n    )\\n  }\\n\\n\\n  render() {\\n    return (\\n      <div className={this.state.movies ? \\\"App\\\" : \\\"App--loading\\\"}>\\n        {this.state.movies ? this._renderMovies() : 'Loading...'}\\n      </div> \\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\n          );\\n        });\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n\\n              // Execute callback\\n              if (config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(26)},16:function(e,t,n){},20:function(e,t,n){},24:function(e,t,n){},26:function(e,t,n){\"use strict\";n.r(t);var a=n(0),s=n.n(a),r=n(8),i=n.n(r),o=(n(16),n(6)),c=n.n(o),l=n(9),u=n(1),p=n(2),m=n(4),h=n(3),v=n(5),f=(n(20),n(10)),d=n.n(f),b=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"div\",{className:\"Movie\"},s.a.createElement(\"div\",{className:\"Movie__Column\"},s.a.createElement(j,{poster:this.props.poster,alt:this.props.title})),s.a.createElement(\"div\",{className:\"Movie__Column\"},s.a.createElement(\"h1\",null,this.props.title),s.a.createElement(\"div\",{className:\"Movie__Genres\"},this.props.genres.map(function(e,t){return s.a.createElement(_,{genres:e,key:t})})),s.a.createElement(\"div\",{className:\"Movie__Synopsis\"},s.a.createElement(d.a,{text:this.props.synopsis,maxLine:\"3\",ellipsis:\"...\",trainRight:!0,baseOn:\"letters\"}),this.props.synopsis)))}}]),t}(a.Component),j=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"img\",{className:\"Movie__Poster\",src:this.props.poster,alt:this.props.alt,title:this.props.alt})}}]),t}(a.Component),_=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return s.a.createElement(\"span\",{className:\"Movie__Genre\"},this.props.genres)}}]),t}(a.Component),O=b,g=(n(24),function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,r=new Array(a),i=0;i<a;i++)r[i]=arguments[i];return(n=Object(m.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(r)))).state={},n._renderMovies=function(){return n.state.movies.map(function(e){return s.a.createElement(O,{title:e.title_english,poster:e.medium_cover_image,key:e.id,genres:e.genres,synopsis:e.synopsis})})},n._getMovies=Object(l.a)(c.a.mark(function e(){var t;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n._callApi();case 2:t=e.sent,n.setState({movies:t});case 4:case\"end\":return e.stop()}},e,this)})),n._callApi=function(){return fetch(\"https://yts.ag/api/v2/list_movies.json?sort_by=rating\").then(function(e){return e.json()}).then(function(e){return e.data.movies}).catch(function(e){return console.log(e)})},n}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"componentDidMount\",value:function(){this._getMovies()}},{key:\"render\",value:function(){return s.a.createElement(\"div\",{className:this.state.movies?\"App\":\"App--loading\"},this.state.movies?this._renderMovies():\"Loading...\")}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(s.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,2,1]]]);","extractedComments":[]}