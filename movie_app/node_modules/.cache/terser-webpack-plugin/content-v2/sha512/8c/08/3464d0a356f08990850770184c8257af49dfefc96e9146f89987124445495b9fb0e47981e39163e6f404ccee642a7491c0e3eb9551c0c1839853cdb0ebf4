{"map":"{\"version\":3,\"sources\":[\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\Movie.js\",\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\App.js\",\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\serviceWorker.js\",\"C:\\\\repositories\\\\react-tutorials\\\\movie_app\\\\src\\\\index.js\"],\"names\":[\"Movie\",\"react_default\",\"a\",\"createElement\",\"className\",\"Movie_MoviePoster\",\"poster\",\"this\",\"props\",\"alt\",\"title\",\"genres\",\"map\",\"genre\",\"index\",\"Movie_MovieGenres\",\"key\",\"lib_default\",\"text\",\"synopsis\",\"maxLine\",\"ellipsis\",\"trimRight\",\"basedOn\",\"Component\",\"MoviePoster\",\"src\",\"MovieGenres\",\"App\",\"state\",\"_renderMovies\",\"_this\",\"movies\",\"movie\",\"src_Movie_0\",\"title_english\",\"medium_cover_image\",\"id\",\"_getMovies\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"_callApi\",\"sent\",\"setState\",\"stop\",\"fetch\",\"then\",\"data\",\"json\",\"catch\",\"e\",\"console\",\"log\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"kUAKMA,mLAQE,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACE,EAAD,CAAaC,OAAQC,KAAKC,MAAMF,OAAQG,IAAKF,KAAKC,MAAME,SAE5DT,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAA,KAAKI,KAAKC,MAAME,OAChBT,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,iBACVG,KAAKC,MAAMG,OAAOC,IAAI,SAACC,EAAOC,GAC3B,OAAOb,EAAAC,EAAAC,cAACY,EAAD,CAAaJ,OAAQE,EAAOG,IAAKF,OAGhDb,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIgB,KAAMX,KAAKC,MAAMW,SACjBC,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,sBA1BhBC,EAAAA,WAmCdC,mLAME,OACIxB,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,gBAAgBsB,IAAKnB,KAAKC,MAAMF,OAAQG,IAAKF,KAAKC,MAAMC,IAAKC,MAAOH,KAAKC,MAAMC,aAPhFe,EAAAA,WAYpBG,mLAKE,OAAO1B,EAAAC,EAAAC,cAAA,OAAA,CAAMC,UAAU,gBAAgBG,KAAKC,MAAMG,eALhCa,EAAAA,WASXxB,EAAAA,ECXA4B,oNA7CbC,MAAQ,KAMRC,cAAgB,WAUd,OATeC,EAAKF,MAAMG,OAAOpB,IAAI,SAACqB,GACpC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,CACLxB,MAAOuB,EAAME,cACb7B,OAAQ2B,EAAMG,mBACdpB,IAAKiB,EAAMI,GACX1B,OAAQsB,EAAMtB,OACdQ,SAAUc,EAAMd,gBAMtBmB,gCAAa,SAAAC,IAAA,IAAAP,EAAA,OAAAQ,EAAAtC,EAAAuC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACUb,EAAKc,WADf,KAAA,EACLb,EADKU,EAAAI,KAEXf,EAAKgB,SAAS,CACZf,OAAAA,IAHS,KAAA,EAAA,IAAA,MAAA,OAAAU,EAAAM,SAAAT,EAAAhC,WAObsC,SAAW,WACT,OAAOI,MAAM,iEACZC,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAE,GAAI,OAAIA,EAAKD,KAAKnB,SACvBqB,MACC,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,yFA5BnB/C,KAAK+B,8CAkCL,OACErC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAWG,KAAKsB,MAAMG,OAAS,MAAQ,gBACzCzB,KAAKsB,MAAMG,OAASzB,KAAKuB,gBAAkB,qBAxClCN,EAAAA,YCMEiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,EAAAA,EAASC,OAAO9D,EAAAC,EAAAC,cAAC6D,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,KAAK,SAAAoB,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\r\\nimport './Movie.css';\\r\\nimport PropTypes from 'prop-types';\\r\\nimport LinesEllipsis from'react-lines-ellipsis';\\r\\n\\r\\nclass Movie extends Component {\\r\\n    static propTypes = {\\r\\n        title: PropTypes.string.isRequired,\\r\\n        poster: PropTypes.string.isRequired,\\r\\n        genres: PropTypes.array.isRequired,\\r\\n        synopsis: PropTypes.string.isRequired\\r\\n    }\\r\\n    render(){\\r\\n        return (\\r\\n            <div className=\\\"Movie\\\">\\r\\n                <div className=\\\"Movie__Column\\\">\\r\\n                    <MoviePoster poster={this.props.poster} alt={this.props.title}/>\\r\\n                </div>\\r\\n                <div className=\\\"Movie__Column\\\">\\r\\n                    <h1>{this.props.title}</h1>\\r\\n                    <div className=\\\"Movie__Genres\\\">\\r\\n                        {this.props.genres.map((genre, index) => {\\r\\n                            return <MovieGenres genres={genre} key={index}/>\\r\\n                        })}\\r\\n                    </div>\\r\\n                    <div className=\\\"Movie__Synopsis\\\">\\r\\n                        <LinesEllipsis \\r\\n                            text={this.props.synopsis}\\r\\n                            maxLine='3'\\r\\n                            ellipsis='...'\\r\\n                            trimRight\\r\\n                            basedOn='letters'\\r\\n                        />\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nclass MoviePoster extends Component {\\r\\n    static propTypes = {\\r\\n        poster: PropTypes.string.isRequired,\\r\\n        alt: PropTypes.string.isRequired\\r\\n    }\\r\\n    render(){\\r\\n        return (\\r\\n            <img className=\\\"Movie__Poster\\\" src={this.props.poster} alt={this.props.alt} title={this.props.alt} />\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nclass MovieGenres extends Component {\\r\\n    static propTypes = {\\r\\n        genres: PropTypes.string.isRequired\\r\\n    }\\r\\n    render(){\\r\\n        return <span className=\\\"Movie__Genre\\\">{this.props.genres}</span>\\r\\n    }\\r\\n}\\r\\n\\r\\nexport default Movie;\",\"import React, { Component } from 'react';\\r\\nimport Movie from './Movie';\\r\\nimport './App.css';\\r\\n\\r\\nclass App extends Component {\\r\\n  state = {}\\r\\n\\r\\n  componentDidMount(){\\r\\n    this._getMovies();\\r\\n  }\\r\\n\\r\\n  _renderMovies = () => {\\r\\n    const movies = this.state.movies.map((movie) => {\\r\\n      return <Movie \\r\\n        title={movie.title_english}\\r\\n        poster={movie.medium_cover_image}\\r\\n        key={movie.id}\\r\\n        genres={movie.genres}\\r\\n        synopsis={movie.synopsis}\\r\\n      />\\r\\n    })\\r\\n    return movies\\r\\n  }\\r\\n\\r\\n  _getMovies = async () => {\\r\\n    const movies = await this._callApi();\\r\\n    this.setState({\\r\\n      movies\\r\\n    });\\r\\n  }\\r\\n                 \\r\\n  _callApi = () => {\\r\\n    return fetch(\\\"https://yts.am/api/v2/list_movies.json?sort_by=download_count\\\")\\r\\n    .then(data => data.json())\\r\\n    .then(json => json.data.movies)\\r\\n    .catch(\\r\\n      e => console.log(e)\\r\\n    )\\r\\n  }\\r\\n\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <div className={this.state.movies ? \\\"App\\\" : \\\"App--loading\\\"}>\\r\\n        {this.state.movies ? this._renderMovies() : 'Loading...'}\\r\\n      </div> \\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// In production, we register a service worker to serve assets from local cache.\\r\\n\\r\\n// This lets the app load faster on subsequent visits in production, and gives\\r\\n// it offline capabilities. However, it also means that developers (and users)\\r\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\r\\n// cached resources are updated in the background.\\r\\n\\r\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\r\\n// This link also includes instructions on opting out of this behavior.\\r\\n\\r\\nconst isLocalhost = Boolean(\\r\\n  window.location.hostname === 'localhost' ||\\r\\n    // [::1] is the IPv6 localhost address.\\r\\n    window.location.hostname === '[::1]' ||\\r\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\r\\n    window.location.hostname.match(\\r\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\r\\n    )\\r\\n);\\r\\n\\r\\nexport function register(config) {\\r\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\r\\n    // The URL constructor is available in all browsers that support SW.\\r\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\r\\n    if (publicUrl.origin !== window.location.origin) {\\r\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\r\\n      // from what our page is served on. This might happen if a CDN is used to\\r\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    window.addEventListener('load', () => {\\r\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\r\\n\\r\\n      if (isLocalhost) {\\r\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\r\\n        checkValidServiceWorker(swUrl, config);\\r\\n\\r\\n        // Add some additional logging to localhost, pointing developers to the\\r\\n        // service worker/PWA documentation.\\r\\n        navigator.serviceWorker.ready.then(() => {\\r\\n          console.log(\\r\\n            'This web app is being served cache-first by a service ' +\\r\\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\\r\\n          );\\r\\n        });\\r\\n      } else {\\r\\n        // Is not local host. Just register service worker\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction registerValidSW(swUrl, config) {\\r\\n  navigator.serviceWorker\\r\\n    .register(swUrl)\\r\\n    .then(registration => {\\r\\n      registration.onupdatefound = () => {\\r\\n        const installingWorker = registration.installing;\\r\\n        installingWorker.onstatechange = () => {\\r\\n          if (installingWorker.state === 'installed') {\\r\\n            if (navigator.serviceWorker.controller) {\\r\\n              // At this point, the old content will have been purged and\\r\\n              // the fresh content will have been added to the cache.\\r\\n              // It's the perfect time to display a \\\"New content is\\r\\n              // available; please refresh.\\\" message in your web app.\\r\\n              console.log('New content is available; please refresh.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config.onUpdate) {\\r\\n                config.onUpdate(registration);\\r\\n              }\\r\\n            } else {\\r\\n              // At this point, everything has been precached.\\r\\n              // It's the perfect time to display a\\r\\n              // \\\"Content is cached for offline use.\\\" message.\\r\\n              console.log('Content is cached for offline use.');\\r\\n\\r\\n              // Execute callback\\r\\n              if (config.onSuccess) {\\r\\n                config.onSuccess(registration);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        };\\r\\n      };\\r\\n    })\\r\\n    .catch(error => {\\r\\n      console.error('Error during service worker registration:', error);\\r\\n    });\\r\\n}\\r\\n\\r\\nfunction checkValidServiceWorker(swUrl, config) {\\r\\n  // Check if the service worker can be found. If it can't reload the page.\\r\\n  fetch(swUrl)\\r\\n    .then(response => {\\r\\n      // Ensure service worker exists, and that we really are getting a JS file.\\r\\n      if (\\r\\n        response.status === 404 ||\\r\\n        response.headers.get('content-type').indexOf('javascript') === -1\\r\\n      ) {\\r\\n        // No service worker found. Probably a different app. Reload the page.\\r\\n        navigator.serviceWorker.ready.then(registration => {\\r\\n          registration.unregister().then(() => {\\r\\n            window.location.reload();\\r\\n          });\\r\\n        });\\r\\n      } else {\\r\\n        // Service worker found. Proceed as normal.\\r\\n        registerValidSW(swUrl, config);\\r\\n      }\\r\\n    })\\r\\n    .catch(() => {\\r\\n      console.log(\\r\\n        'No internet connection found. App is running in offline mode.'\\r\\n      );\\r\\n    });\\r\\n}\\r\\n\\r\\nexport function unregister() {\\r\\n  if ('serviceWorker' in navigator) {\\r\\n    navigator.serviceWorker.ready.then(registration => {\\r\\n      registration.unregister();\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport App from './App';\\r\\nimport * as serviceWorker from './serviceWorker';\\r\\n\\r\\nReactDOM.render(<App />, document.getElementById('root'));\\r\\n\\r\\n// If you want your app to work offline and load faster, you can change\\r\\n// unregister() to register() below. Note this comes with some pitfalls.\\r\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\r\\nserviceWorker.unregister();\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(26)},16:function(e,t,n){},20:function(e,t,n){},24:function(e,t,n){},26:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),s=n(8),o=n.n(s),i=(n(16),n(6)),c=n.n(i),l=n(9),u=n(1),p=n(2),m=n(4),h=n(3),v=n(5),d=(n(20),n(10)),f=n.n(d),b=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"Movie\"},r.a.createElement(\"div\",{className:\"Movie__Column\"},r.a.createElement(_,{poster:this.props.poster,alt:this.props.title})),r.a.createElement(\"div\",{className:\"Movie__Column\"},r.a.createElement(\"h1\",null,this.props.title),r.a.createElement(\"div\",{className:\"Movie__Genres\"},this.props.genres.map(function(e,t){return r.a.createElement(j,{genres:e,key:t})})),r.a.createElement(\"div\",{className:\"Movie__Synopsis\"},r.a.createElement(f.a,{text:this.props.synopsis,maxLine:\"3\",ellipsis:\"...\",trimRight:!0,basedOn:\"letters\"}))))}}]),t}(a.Component),_=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"img\",{className:\"Movie__Poster\",src:this.props.poster,alt:this.props.alt,title:this.props.alt})}}]),t}(a.Component),j=function(e){function t(){return Object(u.a)(this,t),Object(m.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"span\",{className:\"Movie__Genre\"},this.props.genres)}}]),t}(a.Component),O=b,y=(n(24),function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,s=new Array(a),o=0;o<a;o++)s[o]=arguments[o];return(n=Object(m.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(s)))).state={},n._renderMovies=function(){return n.state.movies.map(function(e){return r.a.createElement(O,{title:e.title_english,poster:e.medium_cover_image,key:e.id,genres:e.genres,synopsis:e.synopsis})})},n._getMovies=Object(l.a)(c.a.mark(function e(){var t;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n._callApi();case 2:t=e.sent,n.setState({movies:t});case 4:case\"end\":return e.stop()}},e,this)})),n._callApi=function(){return fetch(\"https://yts.am/api/v2/list_movies.json?sort_by=download_count\").then(function(e){return e.json()}).then(function(e){return e.data.movies}).catch(function(e){return console.log(e)})},n}return Object(v.a)(t,e),Object(p.a)(t,[{key:\"componentDidMount\",value:function(){this._getMovies()}},{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:this.state.movies?\"App\":\"App--loading\"},this.state.movies?this._renderMovies():\"Loading...\")}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(y,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,2,1]]]);","extractedComments":[]}